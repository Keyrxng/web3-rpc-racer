{
  "version": 3,
  "sources": ["../../src/extraRpcs.ts", "../../src/constants.ts"],
  "sourcesContent": ["const extraRpcs: Record<string, string[]> = {}; // @DEV: passed in at build time check build/esbuild-build.ts\r\n\r\nexport { extraRpcs };\r\n", "import { extraRpcs } from \"./extraRpcs\";\n\nexport enum NetworkIds {\n  Mainnet = 1,\n  Goerli = 5,\n  Gnosis = 100,\n  Anvil = 31337,\n}\n\nexport enum Tokens {\n  DAI = \"0x6b175474e89094c44da98b954eedeac495271d0f\",\n  WXDAI = \"0xe91d153e0b41518a2ce8dd3d7944fa863463a97d\",\n}\n\nexport const networkNames = {\n  [NetworkIds.Mainnet]: \"Ethereum Mainnet\",\n  [NetworkIds.Goerli]: \"Goerli Testnet\",\n  [NetworkIds.Gnosis]: \"Gnosis Chain\",\n  [NetworkIds.Anvil]: \"http://127.0.0.1:8545\",\n};\n\nexport const networkCurrencies: Record<number, object> = {\n  [NetworkIds.Mainnet]: { symbol: \"ETH\", decimals: 18 },\n  [NetworkIds.Goerli]: { symbol: \"GoerliETH\", decimals: 18 },\n  [NetworkIds.Gnosis]: { symbol: \"XDAI\", decimals: 18 },\n  [NetworkIds.Anvil]: { symbol: \"XDAI\", decimals: 18 },\n};\n\nexport function getNetworkName(networkId?: number) {\n  const networkName = networkNames[networkId as keyof typeof networkNames];\n  if (!networkName) {\n    console.error(`Unknown network ID: ${networkId}`);\n  }\n  return networkName ?? \"Unknown Network\";\n}\n\nexport const networkExplorers: Record<number, string> = {\n  [NetworkIds.Mainnet]: \"https://etherscan.io\",\n  [NetworkIds.Goerli]: \"https://goerli.etherscan.io\",\n  [NetworkIds.Gnosis]: \"https://gnosisscan.io\",\n  [NetworkIds.Anvil]: \"https://gnosisscan.io\",\n};\n\n// for tests\nif (typeof extraRpcs !== \"object\") {\n  const extraRpcs: Record<number, string[]> = {};\n\n  extraRpcs[100] = [\n    \"https://rpc.gnosischain.com\",\n    \"https://xdai-archive.blockscout.com\",\n    \"https://gnosis-pokt.nodies.app\",\n    \"https://gnosis.drpc.org\",\n    \"https://endpoints.omniatech.io/v1/gnosis/mainnet/public\",\n    \"https://gnosis.publicnode.com\",\n    \"wss://gnosis.publicnode.com\",\n    \"https://rpc.tornadoeth.cash/gnosis\",\n  ] as string[];\n}\n\nexport const networkRpcs: Record<number, string[]> = {\n  [NetworkIds.Mainnet]: [\"https://rpc-pay.ubq.fi/v1/mainnet\", ...(extraRpcs[NetworkIds.Mainnet] || [])],\n  [NetworkIds.Goerli]: [\"https://rpc-pay.ubq.fi/v1/goerli\", ...(extraRpcs[NetworkIds.Goerli] || [])],\n  [NetworkIds.Gnosis]: [\"https://rpc.ankr.com/gnosis\", ...(extraRpcs[NetworkIds.Gnosis] || [])],\n  [NetworkIds.Anvil]: [\"http://127.0.0.1:8545\"],\n};\n\nexport const permit2Address = \"0x000000000022D473030F116dDEE9F6B43aC78BA3\";\nexport const nftAddress = \"0xAa1bfC0e51969415d64d6dE74f27CDa0587e645b\";\n"],
  "mappings": "mBAAA,IAAMA,EAAsC,CAAC,ECEtC,IAAKC,OACVA,IAAA,QAAU,GAAV,UACAA,IAAA,OAAS,GAAT,SACAA,IAAA,OAAS,KAAT,SACAA,IAAA,MAAQ,OAAR,QAJUA,OAAA,IAOAC,OACVA,EAAA,IAAM,6CACNA,EAAA,MAAQ,6CAFEA,OAAA,IAKCC,EAAe,CACzB,EAAqB,mBACrB,EAAoB,iBACpB,IAAoB,eACpB,MAAmB,uBACtB,EAEaC,EAA4C,CACtD,EAAqB,CAAE,OAAQ,MAAO,SAAU,EAAG,EACnD,EAAoB,CAAE,OAAQ,YAAa,SAAU,EAAG,EACxD,IAAoB,CAAE,OAAQ,OAAQ,SAAU,EAAG,EACnD,MAAmB,CAAE,OAAQ,OAAQ,SAAU,EAAG,CACrD,EAEO,SAASC,EAAeC,EAAoB,CACjD,IAAMC,EAAcJ,EAAaG,CAAsC,EACvE,OAAKC,GACH,QAAQ,MAAM,uBAAuBD,CAAS,EAAE,EAE3CC,GAAe,iBACxB,CAEO,IAAMC,EAA2C,CACrD,EAAqB,uBACrB,EAAoB,8BACpB,IAAoB,wBACpB,MAAmB,uBACtB,EAGA,GAAI,OAAOC,GAAc,SAAU,CACjC,IAAMA,EAAsC,CAAC,EAE7CA,EAAU,GAAG,EAAI,CACf,8BACA,sCACA,iCACA,0BACA,0DACA,gCACA,8BACA,oCACF,CACF,CAEO,IAAMC,EAAwC,CAClD,EAAqB,CAAC,oCAAqC,GAAID,EAAU,CAAkB,GAAK,CAAC,CAAE,EACnG,EAAoB,CAAC,mCAAoC,GAAIA,EAAU,CAAiB,GAAK,CAAC,CAAE,EAChG,IAAoB,CAAC,8BAA+B,GAAIA,EAAU,GAAiB,GAAK,CAAC,CAAE,EAC3F,MAAmB,CAAC,uBAAuB,CAC9C,EAEaE,EAAiB,6CACjBC,EAAa",
  "names": ["extraRpcs", "NetworkIds", "Tokens", "networkNames", "networkCurrencies", "getNetworkName", "networkId", "networkName", "networkExplorers", "extraRpcs", "networkRpcs", "permit2Address", "nftAddress"]
}
